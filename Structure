 post '/medications' do
        @medication = params["medication"]
        erb :"medications/index"

For Show route
@medication = Medication.create(name: params["name"], content: params["content"])
       redirect "/medications/#{@medication.id}"

APPLICATION CONTROLLER 1st Draft

class ApplicationController < Sinatra::Base
    set :views, Proc.new {File.join(root, "../views")}

    get '/' do
        erb :index
    end

    post '/medications' do
        erb :"medications/index"
    end

    
end

*From environment.rb file
# require './app/controller/application_controller'

*From MedicationsController file(1st draft working tree)
get '/medications' do
        @medications = Medication.all
        erb :"medication/index"
    end

    get '/medications/new' do
        erb :"medications/new"
     end

    get '/medications/:id' do
        @medications = Medication.find_by(id: params[:id])
        erb :"medications/show"
    end
    
    post '/medications/new' do
        medication = Medication.create(name: params["name"], description: params["description"])
        redirect "/medications/#{medication.id}"
    end

    get '/medications/:id/edit' do
        @medication = Medication.find_by(id: params[:id])
        erb :"medications/edit"
    end

    patch '/medications/:id' do
        medication = Medication.find_by(id: params[:id])
        medication.update(title: params["title"], content: params["content"])
        redirect "/medications/#{medication.id}"
    end

    delete '/medications/:id' do
        medication = Medication.find_by(id: params[:id])
        medication.delete
        redirect "/medications"

    end

end

POST ROUTE FOR MEDICATIONS(Relating Error)--ActiveRecord::StatementInvalid at /medications
SQLite3::SQLException: no such column: medications.user_id: SELECT "medications".* FROM "medications" WHERE "medications"."name" = ? AND "medications"."description" = ?
AND "medications"."id" = ? AND "medications"."medication_id" IS NULL AND "medications"."user_id" = ? LIMIT ?

post "/medications" do        
        @name = params[:name]
        @medication = Medication.find_or_create_by(name: params[:name], description: params[:description], 
        disease_states: params[:disease_state], medication_id: params[:medication_id], user_id: params[:user_id])

Seeds File 1st Draft
 medications = [
     {name: 'med name', med_type: 'med-type', brand: 'med brand', disease_state: '*' }
 ]

 medications.each do |m|
     Medication.create(m)
 end